1)(済)ハッシュを CRC32 に

完了

2)(既出)HTML 内のタグを参照可能にする

正規表現待ち-> 完成
組み込み開始: 正規表現式を引数にして結果を文字列で返す

3)HTML データをファイルに保存するオプション追加(ファイル名は引数指定)

完了

4)リクエストヘッダーに Cookies を挿入可能にする(内容は引数でTAB区切り指定)

完了。TAB区切りは保留

5)非同期処理化

完了
改定。メッセージにwParamとlParamの値をつんだ。
　wParamがgetContents()の戻り値。つまり関数自身の成功/失敗チェック。
　lParamがthreadコンテキストの値。こうしないと並行に起動した場合にどれが
　終了対象なのか判別できないため。これのおかげでgetContentsAsync()の戻り値は
　無視してもOKになってしまった。

6)３桁の Response code を返す引数追加

完了。ただし3xx系、1xx系での確認が必要

7)KeepAliveTime、UA を引数化(UA デフォは IE)

timeout
完了

UA
完了

20:03 (GrandM) cleanUp 関数の引数追加
20:03 (GrandM) 日付、CRC32、あと正規表現結果もか

完了

・未解決
　・RegexMatcherの対象文字列を与えるバージョン　直下と連動かねぇ？
　・マッチした文字列の後方参照　正規表現関係の見直しで何とか
　・フィルタリング　広告等の排除(CRC取得の前処理として)
　・スレッドの作成と実行を分離
　　・スレッドの再利用も考える

再実行スレッドの利用完了


19:56 (GrandM) http://a/ とか期限切れドメインとかで動かすと落ちる
　・対応完了
　　GetHostByName失敗から例外投げてる部分で例外指定が途中で間違ってて
    Terminate()されてた・・・orz

現状での課題はフィルタリングですか・・・
とりあえずWWWCのソース見て考えます・・・

void* FilterGet();
void FilterApply();
void FilterClose();

こんな感じの関数セットかなぁ・・・
関数呼び出し型のインタフェースでの了解がGMさんから取れたのでそれでgo

・FilterApplyをGetContentsに対して直接実行できる？
22:49 (rayfill) というか取得するときにｆｉｌｔｅｒ適用後の関数追加しますか
22:50 (GrandM) その方がはやいかね
22:51 (rayfill) んー、HTTP取得データ、取り出すまでクラスメンバの中だしなぁ
22:52 (rayfill) URLはクラスメンバから取れるからいいとして・・・ｆｉｌｔｅｒのコンテキストとかも引数で渡してやる形で行くか

取りあえずHTTPGetFilteredCRC32()という形でお茶を濁してみる


00:40 (GrandM) おわった
00:40 (GrandM) ３０分
00:40 (GrandM) ＯＫだね
00:41 (rayfill) 速度差は通信速度の差か？(笑)
00:41 (GrandM) http://www80.sakura.ne.jp/~noantica/index2.htm で GetFilterCRC32 すると０になるのぉ
00:43 (rayfill) ふむ・・・ちょい調べてみま
00:44 (GrandM) http://www3.to/hosikuzu/ も・・・って、www3.to か(´Д｀;)
00:44 (rayfill) やっぱり30x系サポートしたほうがよさげだよね・・・
00:45 (GrandM) http://www.geocities.co.jp/Playtown/3932/ で GetFilterCRC32 とまるねぇ
